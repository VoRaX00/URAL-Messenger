// Code generated by mockery v2.52.2. DO NOT EDIT.

package mocks

import (
	models "messenger/internal/domain/models"

	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// CacheRepository is an autogenerated mock type for the CacheRepository type
type CacheRepository struct {
	mock.Mock
}

// Add provides a mock function with given fields: _a0, personIds
func (_m *CacheRepository) Add(_a0 models.Chat, personIds []uuid.UUID) error {
	ret := _m.Called(_a0, personIds)

	if len(ret) == 0 {
		panic("no return value specified for Add")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(models.Chat, []uuid.UUID) error); ok {
		r0 = rf(_a0, personIds)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewCacheRepository creates a new instance of CacheRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCacheRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *CacheRepository {
	mock := &CacheRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
